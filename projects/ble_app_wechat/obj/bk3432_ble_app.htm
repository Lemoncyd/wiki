<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\bk3432_ble_app.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\bk3432_ble_app.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050041: Last Updated: Mon Aug 06 14:01:27 2018
<BR><P>
<H3>Maximum Stack Usage =          0 bytes + Unknown(Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>

<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[4]">DataAbort</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[7]">FIQ_Handler</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[6]">IRQ_Handler</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[3]">PrefetchAbort</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[18]">Read_Uart_Buf</a> from uart.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[2]">SoftwareInterrupt</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[1]">Undefined</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[28]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0vsprintf)
 <LI><a href="#[45]">app_batt_add_bas</a> from app_batt.o(.text) referenced from app.o(.constdata)
 <LI><a href="#[46]">app_batt_msg_dflt_handler</a> from app_batt.o(.text) referenced from app_batt.o(.constdata)
 <LI><a href="#[44]">app_dis_add_dis</a> from app_dis.o(.text) referenced from app.o(.constdata)
 <LI><a href="#[59]">app_period_timer_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[43]">app_wechat_add_wechat</a> from app_wechat.o(.text) referenced from app.o(.constdata)
 <LI><a href="#[5d]">app_wechat_gattc_cmp_evt_handler</a> from app_wechat.o(.text) referenced from app_wechat.o(.constdata)
 <LI><a href="#[5a]">app_wechat_msg_dflt_handler</a> from app_wechat.o(.text) referenced from app_wechat.o(.constdata)
 <LI><a href="#[5b]">app_wechat_ntf_cfg_ind_handler</a> from app_wechat.o(.text) referenced from app_wechat.o(.constdata)
 <LI><a href="#[27]">app_wechat_recvCb</a> from app_wechat.o(.text) referenced from app_wechat.o(.text)
 <LI><a href="#[5c]">app_wechat_write_req_handler</a> from app_wechat.o(.text) referenced from app_wechat.o(.constdata)
 <LI><a href="#[4b]">appm_msg_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[16]">assert_err</a> from arch_main.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[17]">assert_param</a> from arch_main.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[47]">bass_batt_level_ntf_cfg_ind_handler</a> from app_batt.o(.text) referenced from app_batt.o(.constdata)
 <LI><a href="#[2e]">bass_batt_level_upd_req_handler</a> from bass_task.o(.text) referenced from bass_task.o(.constdata)
 <LI><a href="#[2c]">bass_cleanup</a> from bass.o(.text) referenced from bass.o(.constdata)
 <LI><a href="#[2b]">bass_create</a> from bass.o(.text) referenced from bass.o(.constdata)
 <LI><a href="#[2a]">bass_destroy</a> from bass.o(.text) referenced from bass.o(.constdata)
 <LI><a href="#[2d]">bass_enable_req_handler</a> from bass_task.o(.text) referenced from bass_task.o(.constdata)
 <LI><a href="#[49]">bass_enable_rsp_handler</a> from app_batt.o(.text) referenced from app_batt.o(.constdata)
 <LI><a href="#[29]">bass_init</a> from bass.o(.text) referenced from bass.o(.constdata)
 <LI><a href="#[48]">batt_level_upd_handler</a> from app_batt.o(.text) referenced from app_batt.o(.constdata)
 <LI><a href="#[36]">diss_cleanup</a> from diss.o(.text) referenced from diss.o(.constdata)
 <LI><a href="#[35]">diss_create</a> from diss.o(.text) referenced from diss.o(.constdata)
 <LI><a href="#[34]">diss_destroy</a> from diss.o(.text) referenced from diss.o(.constdata)
 <LI><a href="#[33]">diss_init</a> from diss.o(.text) referenced from diss.o(.constdata)
 <LI><a href="#[37]">diss_set_value_req_handler</a> from diss_task.o(.text) referenced from diss_task.o(.constdata)
 <LI><a href="#[39]">diss_value_cfm_handler</a> from diss_task.o(.text) referenced from diss_task.o(.constdata)
 <LI><a href="#[4a]">diss_value_req_ind_handler</a> from app_dis.o(.text) referenced from app_dis.o(.constdata)
 <LI><a href="#[51]">gapc_cmp_evt_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[50]">gapc_connection_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[52]">gapc_disconnect_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[4e]">gapc_get_dev_info_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[54]">gapc_le_pkt_size_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[57]">gapc_param_update_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[55]">gapc_param_updated_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[4f]">gapc_set_dev_info_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[58]">gapc_update_conn_param_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[4d]">gapm_cmp_evt_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[4c]">gapm_device_ready_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[53]">gapm_profile_added_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[2f]">gattc_att_info_req_ind_handler</a> from bass_task.o(.text) referenced 2 times from bass_task.o(.constdata)
 <LI><a href="#[32]">gattc_cmp_evt_handler</a> from bass_task.o(.text) referenced 2 times from bass_task.o(.constdata)
 <LI><a href="#[56]">gattc_mtu_changed_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[31]">gattc_read_req_ind_handler</a> from bass_task.o(.text) referenced 3 times from bass_task.o(.constdata)
 <LI><a href="#[30]">gattc_write_req_ind_handler</a> from bass_task.o(.text) referenced 2 times from bass_task.o(.constdata)
 <LI><a href="#[15]">platform_reset</a> from arch_main.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[d]">prf_add_profile</a> from prf.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[c]">prf_cleanup</a> from prf.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[b]">prf_create</a> from prf.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[8]">prf_get_id_from_task</a> from prf.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[9]">prf_get_task_from_id</a> from prf.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[a]">prf_init</a> from prf.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[25]">rf_force_agc_enable</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[24]">rf_reset</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[20]">rf_rpl_reg_rd</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[21]">rf_rpl_reg_wr</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[26]">rf_rssi_convert</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[23]">rf_sleep</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[22]">rf_txpwr_dbm_get</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[e]">rwble_hl_reset</a> from rwble_hl.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[11]">rwip_prevent_sleep_clear</a> from rwip.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[10]">rwip_prevent_sleep_set</a> from rwip.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[f]">rwip_reset</a> from rwip.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[12]">rwip_sleep_lpcycles_2_us</a> from rwip.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[13]">rwip_us_2_lpcycles</a> from rwip.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[14]">rwip_wakeup_delay_set</a> from rwip.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[5e]">sys_Reset</a> from boot_handlers.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[5]">sys_reserved</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[19]">uart_clear_rxfifo</a> from uart.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[1d]">uart_flow_off</a> from uart.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[1c]">uart_flow_on</a> from uart.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[1f]">uart_printf</a> from uart.o(.text) referenced from uart.o(.text)
 <LI><a href="#[1a]">uart_read</a> from uart.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[1e]">uart_rx_handler</a> from arch_main.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[1b]">uart_write</a> from uart.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[3d]">wechat_cleanup</a> from wechat.o(.text) referenced from wechat.o(.constdata)
 <LI><a href="#[3c]">wechat_create</a> from wechat.o(.text) referenced from wechat.o(.constdata)
 <LI><a href="#[3b]">wechat_destroy</a> from wechat.o(.text) referenced from wechat.o(.constdata)
 <LI><a href="#[3e]">wechat_ind_upd_req_handler</a> from wechat_task.o(.text) referenced from wechat_task.o(.constdata)
 <LI><a href="#[3a]">wechat_init</a> from wechat.o(.text) referenced from wechat.o(.constdata)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[c1]"></a>uart_stack_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[188]"></a>Undefined_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undefined (via Veneer)
</UL>

<P><STRONG><a name="[189]"></a>SoftwareInterrupt_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInterrupt (via Veneer)
</UL>

<P><STRONG><a name="[18a]"></a>PrefetchAbort_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrefetchAbort (via Veneer)
</UL>

<P><STRONG><a name="[18b]"></a>DataAbort_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataAbort (via Veneer)
</UL>

<P><STRONG><a name="[18c]"></a>Reserved_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_reserved (via Veneer)
</UL>

<P><STRONG><a name="[9c]"></a>ke_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[a6]"></a>ke_flush</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
</UL>

<P><STRONG><a name="[ab]"></a>ke_sleep_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[b7]"></a>ke_event_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_isr
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
</UL>

<P><STRONG><a name="[aa]"></a>ke_event_schedule</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_schedule
</UL>

<P><STRONG><a name="[9d]"></a>ke_mem_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[d5]"></a>ke_malloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_data_produce
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_switch_backgroud_push
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_switch_view_push
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_recv_data_push
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_send_data_response
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_send_data_request
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_init_response
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_init_request
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_auth_response
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_auth_request
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_base_push
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_base_response
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_write_req_handler
</UL>

<P><STRONG><a name="[d8]"></a>ke_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_destroy
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_destroy
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_destroy
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_send_pack
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_send_test
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_data_produce
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_switch_backgroud_push_free
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_switch_backgroud_push
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_switch_view_push_free
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_switch_view_push
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_recv_data_push_free
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_recv_data_push
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_send_data_response_free
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_send_data_response
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_send_data_request
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_init_response_free
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_init_response
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_init_request
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_auth_response_free
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_auth_response
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_auth_request
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_base_push_free
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_base_response_free
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_process
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_write_req_handler
</UL>

<P><STRONG><a name="[de]"></a>ke_msg_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_send_lvl
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_enable_prf
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_add_wechat
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dis_add_dis
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_add_bas
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_param
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_stop_advertising
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_disconnect
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_indicate_lvl
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_send_notify
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_dev_info_req_ind_handler
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_device_ready_ind_handler
</UL>

<P><STRONG><a name="[df]"></a>ke_msg_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_send_lvl
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_enable_prf
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_add_wechat
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dis_add_dis
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_add_bas
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_param
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_stop_advertising
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_disconnect
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_indicate_lvl
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_send_notify
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_dev_info_req_ind_handler
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_device_ready_ind_handler
</UL>

<P><STRONG><a name="[f3]"></a>ke_task_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
</UL>

<P><STRONG><a name="[d9]"></a>ke_state_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_stop_advertising
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_ind_upd_req_handler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_init
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[e2]"></a>ke_state_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_stop_advertising
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_ind_upd_req_handler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_write_req_handler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_ntf_cfg_ind_handler
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_profile_added_ind_handler
</UL>

<P><STRONG><a name="[f2]"></a>ke_task_msg_flush</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
</UL>

<P><STRONG><a name="[105]"></a>ke_timer_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>

<P><STRONG><a name="[ad]"></a>ke_timer_sleep_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[a3]"></a>dbg_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[e7]"></a>co_list_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
</UL>

<P><STRONG><a name="[ec]"></a>co_list_push_back</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
</UL>

<P><STRONG><a name="[e8]"></a>co_list_pop_front</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_destroy
</UL>

<P><STRONG><a name="[eb]"></a>co_list_extract</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
</UL>

<P><STRONG><a name="[85]"></a>em_buf_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[87]"></a>llc_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[8c]"></a>llc_reset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset
</UL>

<P><STRONG><a name="[86]"></a>lld_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[8b]"></a>lld_core_reset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset
</UL>

<P><STRONG><a name="[96]"></a>lld_crypt_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[95]"></a>lld_evt_timer_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[91]"></a>lld_evt_end_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[93]"></a>lld_evt_rx_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[b3]"></a>lld_sleep_enter</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[b4]"></a>lld_sleep_wakeup</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup
</UL>

<P><STRONG><a name="[b6]"></a>lld_sleep_wakeup_end</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
</UL>

<P><STRONG><a name="[88]"></a>llm_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[89]"></a>llm_ble_ready</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[a4]"></a>ea_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[90]"></a>ea_finetimer_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[94]"></a>ea_sw_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[af]"></a>ea_sleep_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[e3]"></a>gapc_get_conhdl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
</UL>

<P><STRONG><a name="[99]"></a>gapm_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_reset
</UL>

<P><STRONG><a name="[d6]"></a>attm_svc_create_db</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_init
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
</UL>

<P><STRONG><a name="[d7]"></a>attm_att_set_permission</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_init
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
</UL>

<P><STRONG><a name="[98]"></a>attm_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_reset
</UL>

<P><STRONG><a name="[9a]"></a>gattm_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_reset
</UL>

<P><STRONG><a name="[9b]"></a>l2cm_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_reset
</UL>

<P><STRONG><a name="[a1]"></a>hci_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[a7]"></a>hci_reset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
</UL>

<P><STRONG><a name="[a2]"></a>ahi_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[a0]"></a>h4tl_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[b5]"></a>h4tl_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup
</UL>

<P><STRONG><a name="[b0]"></a>h4tl_stop</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[b2]"></a>__aeabi_uidivmod</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_us_2_lpcycles
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[f8]"></a>rand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
</UL>

<P><STRONG><a name="[70]"></a>srand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[6b]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_get_dev_name
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_indicate_lvl
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bdaddr_env_init
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_data_produce
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_bytes
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_varint32_bits
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_send_data
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_send_notify
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_write_req_handler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[bf]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hex2Str
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_data_produce
</UL>

<P><STRONG><a name="[f7]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_send_data
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_send_indicate
</UL>

<P><STRONG><a name="[6d]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_init
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_clear_rxfifo
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_env_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_init_response
</UL>

<P><STRONG><a name="[16a]"></a>__ARM_clz</STRONG> (ARM, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue (via BLX)
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue (via BLX)
</UL>

<P><STRONG><a name="[65]"></a>__ARM_common_disable_fiq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset (via BLX)
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset (via BLX)
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set (via BLX)
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_clear (via BLX)
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main (via BLX)
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset (via BLX)
</UL>

<P><STRONG><a name="[66]"></a>__ARM_common_disable_irq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset (via BLX)
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset (via BLX)
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set (via BLX)
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_clear (via BLX)
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main (via BLX)
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset (via BLX)
</UL>

<P><STRONG><a name="[7a]"></a>__ARM_common_enable_fiq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset (via BLX)
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset (via BLX)
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set (via BLX)
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_clear (via BLX)
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main (via BLX)
</UL>

<P><STRONG><a name="[7b]"></a>__ARM_common_enable_irq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset (via BLX)
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset (via BLX)
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set (via BLX)
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_clear (via BLX)
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main (via BLX)
</UL>

<P><STRONG><a name="[103]"></a>__ARM_common_switch8</STRONG> (ARM, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler (via BLX)
</UL>

<P><STRONG><a name="[5e]"></a>sys_Reset</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_handlers.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main (via Veneer)
</UL>

<P><STRONG><a name="[5f]"></a>SYSirq_FIQ_Handler</STRONG> (ARM, 16 bytes, Stack size 0 bytes, intc.o(sys_fiq_entry))
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Exception (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>

<P><STRONG><a name="[61]"></a>SYSirq_IRQ_Handler</STRONG> (ARM, 16 bytes, Stack size 0 bytes, intc.o(sys_irq_entry))
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>

<P><STRONG><a name="[16]"></a>assert_err</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_read
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_lpcycles_2_us
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[17]"></a>assert_param</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[63]"></a>assert_warn</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, arch_main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>

<P><STRONG><a name="[64]"></a>dump_data</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, arch_main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>

<P><STRONG><a name="[15]"></a>platform_reset</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_enable
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_finish_transfers
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[69]"></a>bdaddr_env_init</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[6c]"></a>rom_env_init</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[74]"></a>rwip_eif_api_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[6e]"></a>rw_main</STRONG> (Thumb, 178 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_disable
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_cb_register
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_sleep_init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_schedule
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icu_init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icu_get_sleep_mode
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emi_init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_reduce_voltage_sleep
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_idle_sleep
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_eif_api_init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_env_init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bdaddr_env_init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stack_Integrity_Check
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Reset (via Veneer)
</UL>

<P><STRONG><a name="[9f]"></a>rwip_eif_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[84]"></a>rwble_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rwble.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_ble_ready
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;em_buf_init
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[8a]"></a>rwble_reset</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, rwble.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_core_reset
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_reset
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;em_buf_init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
</UL>

<P><STRONG><a name="[ae]"></a>rwble_sleep_check</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rwble.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[a9]"></a>rwble_version</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, rwble.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_version
</UL>

<P><STRONG><a name="[8d]"></a>rwble_isr</STRONG> (Thumb, 556 bytes, Stack size 0 bytes, rwble.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_feed
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ea_sw_isr
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ea_finetimer_isr
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_evt_rx_isr
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_evt_end_isr
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_evt_timer_isr
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_crypt_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Exception
</UL>

<P><STRONG><a name="[97]"></a>rwble_hl_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rwble_hl.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_init
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattm_init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[e]"></a>rwble_hl_reset</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rwble_hl.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_init
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattm_init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[ac]"></a>rwip_check_wakeup_boundary</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[79]"></a>rwip_init</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ahi_init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h4tl_init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ea_init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_mem_init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_eif_get
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[f]"></a>rwip_reset</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_reset
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ea_init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_flush
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[a8]"></a>rwip_version</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rwip.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_version
</UL>

<P><STRONG><a name="[7c]"></a>rwip_schedule</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_schedule
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[10]"></a>rwip_prevent_sleep_set</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[7e]"></a>rwip_sleep</STRONG> (Thumb, 356 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_uart_stop
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_check_wakeup_boundary
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_sleep_check
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h4tl_stop
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ea_sleep_check
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_enter
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_sleep_check
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_sleep_check
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[8e]"></a>rwip_wakeup</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_feed
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h4tl_start
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_wakeup
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[11]"></a>rwip_prevent_sleep_clear</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[8f]"></a>rwip_wakeup_end</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_wakeup_end
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_set
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[13]"></a>rwip_us_2_lpcycles</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_delay_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[14]"></a>rwip_wakeup_delay_set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_us_2_lpcycles
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[12]"></a>rwip_sleep_lpcycles_2_us</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[71]"></a>system_sleep_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[6f]"></a>icu_init</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[7f]"></a>icu_get_sleep_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[b8]"></a>enter_deep_sleep</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, icu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>

<P><STRONG><a name="[80]"></a>cpu_reduce_voltage_sleep</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[ba]"></a>cpu_wakeup</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Exception
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL>

<P><STRONG><a name="[81]"></a>cpu_idle_sleep</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[75]"></a>intc_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, intc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[62]"></a>IRQ_Exception</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, intc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_isr
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_isr
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_wakeup
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_IRQ_Handler (via BLX)
</UL>

<P><STRONG><a name="[60]"></a>FIQ_Exception</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, intc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_wakeup
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_FIQ_Handler (via BLX)
</UL>

<P><STRONG><a name="[18]"></a>Read_Uart_Buf</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[83]"></a>uart_putchar</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print_int
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stack_Integrity_Check
</UL>

<P><STRONG><a name="[1f]"></a>uart_printf</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_param
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_ind_upd_req_handler
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_isr
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dump_data
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_warn
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_param
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_handler
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_data_produce
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_process
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_gattc_cmp_evt_handler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_write_req_handler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_ntf_cfg_ind_handler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_recvCb
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_mtu_changed_ind_handler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_updated_ind_handler
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_le_pkt_size_ind_handler
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_update_conn_param_req_ind_handler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_period_timer_handler
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart.o(.text)
</UL>
<P><STRONG><a name="[be]"></a>hex2Str</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print_int
</UL>

<P><STRONG><a name="[c0]"></a>uart_print_int</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hex2Str
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
</UL>

<P><STRONG><a name="[76]"></a>uart_init</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_stack_register
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[1c]"></a>uart_flow_on</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[19]"></a>uart_clear_rxfifo</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[1d]"></a>uart_flow_off</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[67]"></a>uart_finish_transfers</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
</UL>

<P><STRONG><a name="[1a]"></a>uart_read</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[1b]"></a>uart_write</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[77]"></a>uart_cb_register</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[bb]"></a>uart_isr</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL>

<P><STRONG><a name="[b1]"></a>check_uart_stop</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[72]"></a>emi_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, emi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[73]"></a>timer_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[c2]"></a>timer_isr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_set
</UL>

<P><STRONG><a name="[7d]"></a>wdt_disable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[68]"></a>wdt_enable</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
</UL>

<P><STRONG><a name="[92]"></a>wdt_feed</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[c4]"></a>Delay_ms</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK32K_AutoCali_init
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration
</UL>

<P><STRONG><a name="[c3]"></a>kmod_calibration</STRONG> (Thumb, 280 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initial_xver_BK3432_openLoop
</UL>

<P><STRONG><a name="[c5]"></a>initial_xver_BK3432_openLoop</STRONG> (Thumb, 318 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init
</UL>

<P><STRONG><a name="[9e]"></a>rf_init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initial_xver_BK3432_openLoop
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[b9]"></a>Delay_us</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rf_xvr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_deep_sleep
</UL>

<P><STRONG><a name="[c6]"></a>CLK32K_AutoCali_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rf_xvr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>

<P><STRONG><a name="[ca]"></a>gpio_config</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_test_init
</UL>

<P><STRONG><a name="[c8]"></a>gpio_set</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_triger
</UL>

<P><STRONG><a name="[c7]"></a>gpio_triger</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>

<P><STRONG><a name="[bc]"></a>gpio_isr</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL>

<P><STRONG><a name="[c9]"></a>gpio_test_init</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>

<P><STRONG><a name="[78]"></a>flash_init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[cb]"></a>flash_readword</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_status
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_start
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_clearKey
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writeKey
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
</UL>

<P><STRONG><a name="[d1]"></a>flash_writeword</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_status
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_start
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_clearKey
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writeKey
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>

<P><STRONG><a name="[d2]"></a>flash_erase_sector</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_status
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_start
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_clearKey
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writeKey
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
</UL>

<P><STRONG><a name="[d3]"></a>flash_erase</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
</UL>

<P><STRONG><a name="[d4]"></a>flash_write</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writeword
</UL>

<P><STRONG><a name="[6a]"></a>flash_read</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_readword
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bdaddr_env_init
</UL>

<P><STRONG><a name="[da]"></a>bass_get_att_handle</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
</UL>

<P><STRONG><a name="[f6]"></a>bass_prf_itf_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>

<P><STRONG><a name="[e0]"></a>bass_get_att_idx</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
</UL>

<P><STRONG><a name="[e1]"></a>bass_exe_operation</STRONG> (Thumb, 238 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
</UL>

<P><STRONG><a name="[e6]"></a>diss_compute_cfg_flag</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
</UL>

<P><STRONG><a name="[f5]"></a>diss_prf_itf_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>

<P><STRONG><a name="[ed]"></a>diss_handle_to_value</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
</UL>

<P><STRONG><a name="[e9]"></a>diss_value_to_handle</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
</UL>

<P><STRONG><a name="[ea]"></a>diss_check_val_len</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
</UL>

<P><STRONG><a name="[ee]"></a>wechat_get_att_handle</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, wechat.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_indicate_lvl
</UL>

<P><STRONG><a name="[ef]"></a>wechat_indicate_lvl</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, wechat.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_get_att_handle
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_ind_upd_req_handler
</UL>

<P><STRONG><a name="[f4]"></a>wechat_prf_itf_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wechat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>

<P><STRONG><a name="[f0]"></a>wechat_get_att_idx</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, wechat.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
</UL>

<P><STRONG><a name="[a]"></a>prf_init</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_msg_flush
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[d]"></a>prf_add_profile</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[b]"></a>prf_create</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[c]"></a>prf_cleanup</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[db]"></a>prf_env_get</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_ind_upd_req_handler
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_get_att_idx
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_get_att_handle
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_idx
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_handle
</UL>

<P><STRONG><a name="[dd]"></a>prf_src_task_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_indicate_lvl
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
</UL>

<P><STRONG><a name="[e4]"></a>prf_dst_task_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[8]"></a>prf_get_id_from_task</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, prf.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[9]"></a>prf_get_task_from_id</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_send_lvl
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_enable_prf
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_send_notify
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[e5]"></a>prf_pack_char_pres_fmt</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, prf_utils.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
</UL>

<P><STRONG><a name="[a5]"></a>appm_init</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_init
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dis_init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_init
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[104]"></a>appm_add_svc</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[fc]"></a>appm_disconnect</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>

<P><STRONG><a name="[fd]"></a>appm_start_advertising</STRONG> (Thumb, 268 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_enable
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[fe]"></a>appm_stop_advertising</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, app.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>

<P><STRONG><a name="[ff]"></a>appm_update_param</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_update_conn_param_req_ind_handler
</UL>

<P><STRONG><a name="[100]"></a>appm_get_dev_name</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
</UL>

<P><STRONG><a name="[fb]"></a>app_batt_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
</UL>

<P><STRONG><a name="[45]"></a>app_batt_add_bas</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[101]"></a>app_batt_enable_prf</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>

<P><STRONG><a name="[102]"></a>app_batt_send_lvl</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_batt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
</UL>

<P><STRONG><a name="[fa]"></a>app_dis_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_dis.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
</UL>

<P><STRONG><a name="[44]"></a>app_dis_add_dis</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, app_dis.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[f9]"></a>app_wechat_init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_wechat.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_register_Cb
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
</UL>

<P><STRONG><a name="[43]"></a>app_wechat_add_wechat</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, app_wechat.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[108]"></a>app_wechat_send_notify</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, app_wechat.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_send_indicate
</UL>

<P><STRONG><a name="[109]"></a>app_send_indicate</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, app_wechat.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_send_notify
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_send_data
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_gattc_cmp_evt_handler
</UL>

<P><STRONG><a name="[10a]"></a>app_wechat_send_data</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, app_wechat.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_send_indicate
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_send_pack
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_send_test
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_process
</UL>

<P><STRONG><a name="[110]"></a>crc32</STRONG> (Thumb, 200 bytes, Stack size 0 bytes, crc32.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_table
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_consume
</UL>

<P><STRONG><a name="[133]"></a>epb_unpack_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, epb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_switch_backgroud_push
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_switch_view_push
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_recv_data_push
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_send_data_response
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_init_response
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_auth_response
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_base_push
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_base_response
</UL>

<P><STRONG><a name="[114]"></a>epb_has_tag</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, epb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_tag_value_offset
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_switch_backgroud_push
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_switch_view_push
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_recv_data_push
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_send_data_response
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_init_response
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_auth_response
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_base_response
</UL>

<P><STRONG><a name="[115]"></a>epb_get_uint32</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, epb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_tag_value_offset
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_varint32_bits
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_init_response
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_enum
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_bool
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_sint32
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_int32
</UL>

<P><STRONG><a name="[116]"></a>epb_get_int32</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, epb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_uint32
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_init_response
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_base_response
</UL>

<P><STRONG><a name="[117]"></a>epb_get_sint32</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, epb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_uint32
</UL>

<P><STRONG><a name="[118]"></a>epb_get_bool</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, epb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_uint32
</UL>

<P><STRONG><a name="[119]"></a>epb_get_enum</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, epb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_uint32
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_switch_backgroud_push
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_switch_view_push
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_recv_data_push
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_init_response
</UL>

<P><STRONG><a name="[11a]"></a>epb_get_bytes</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, epb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_tag_value_offset
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_varint32_bits
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_recv_data_push
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_send_data_response
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_auth_response
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_message
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_string
</UL>

<P><STRONG><a name="[11b]"></a>epb_get_string</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, epb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_init_response
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_base_response
</UL>

<P><STRONG><a name="[11c]"></a>epb_get_message</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, epb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_switch_backgroud_push
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_switch_view_push
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_recv_data_push
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_send_data_response
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_init_response
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_auth_response
</UL>

<P><STRONG><a name="[11d]"></a>epb_get_fixed32</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, epb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_tag_value_offset
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_float
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_sfixed32
</UL>

<P><STRONG><a name="[11e]"></a>epb_get_sfixed32</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, epb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_fixed32
</UL>

<P><STRONG><a name="[11f]"></a>epb_get_float</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, epb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_fixed32
</UL>

<P><STRONG><a name="[130]"></a>epb_pack_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, epb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_send_data_request
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_init_request
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_auth_request
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_base_request
</UL>

<P><STRONG><a name="[131]"></a>epb_get_packed_size</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, epb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_send_data_request
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_init_request
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_auth_request
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_base_request
</UL>

<P><STRONG><a name="[121]"></a>epb_set_uint32</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, epb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_varint32_bits
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_tag
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_enum
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_bool
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_sint32
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_int32
</UL>

<P><STRONG><a name="[123]"></a>epb_set_int32</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, epb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_uint32
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_auth_request
</UL>

<P><STRONG><a name="[124]"></a>epb_set_sint32</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, epb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_uint32
</UL>

<P><STRONG><a name="[125]"></a>epb_set_bool</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, epb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_uint32
</UL>

<P><STRONG><a name="[126]"></a>epb_set_enum</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, epb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_uint32
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_send_data_request
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_auth_request
</UL>

<P><STRONG><a name="[127]"></a>epb_set_bytes</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, epb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_varint32_bits
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_tag
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_send_data_request
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_init_request
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_auth_request
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_message
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_string
</UL>

<P><STRONG><a name="[128]"></a>epb_set_string</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, epb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_auth_request
</UL>

<P><STRONG><a name="[129]"></a>epb_set_message</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, epb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_send_data_request
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_init_request
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_auth_request
</UL>

<P><STRONG><a name="[12a]"></a>epb_set_fixed32</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, epb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_tag
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_float
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_sfixed32
</UL>

<P><STRONG><a name="[12b]"></a>epb_set_sfixed32</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, epb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_fixed32
</UL>

<P><STRONG><a name="[12c]"></a>epb_set_float</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, epb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_fixed32
</UL>

<P><STRONG><a name="[12e]"></a>epb_varint32_pack_size</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, epb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_send_data_request_pack_size
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_auth_request_pack_size
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_length_delimited_pack_size
</UL>

<P><STRONG><a name="[12d]"></a>epb_length_delimited_pack_size</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, epb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_varint32_pack_size
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_send_data_request_pack_size
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_init_request_pack_size
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_auth_request_pack_size
</UL>

<P><STRONG><a name="[12f]"></a>epb_pack_base_request</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, epb_mmbp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_packed_size
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_init
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_send_data_request
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_init_request
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_auth_request
</UL>

<P><STRONG><a name="[132]"></a>epb_unpack_base_response</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, epb_mmbp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_string
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_int32
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_has_tag
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_init
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_send_data_response
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_init_response
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_auth_response
</UL>

<P><STRONG><a name="[134]"></a>epb_unpack_base_response_free</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, epb_mmbp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>

<P><STRONG><a name="[135]"></a>epb_unpack_base_push</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, epb_mmbp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_init
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_switch_backgroud_push
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_switch_view_push
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_recv_data_push
</UL>

<P><STRONG><a name="[136]"></a>epb_unpack_base_push_free</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, epb_mmbp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>

<P><STRONG><a name="[137]"></a>epb_auth_request_pack_size</STRONG> (Thumb, 156 bytes, Stack size 0 bytes, epb_mmbp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_length_delimited_pack_size
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_varint32_pack_size
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_data_produce
</UL>

<P><STRONG><a name="[138]"></a>epb_pack_auth_request</STRONG> (Thumb, 266 bytes, Stack size 0 bytes, epb_mmbp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_base_request
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_message
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_string
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_bytes
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_enum
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_int32
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_packed_size
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_init
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_data_produce
</UL>

<P><STRONG><a name="[139]"></a>epb_unpack_auth_response</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, epb_mmbp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_base_response
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_message
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_bytes
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_has_tag
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_init
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_consume
</UL>

<P><STRONG><a name="[13a]"></a>epb_unpack_auth_response_free</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, epb_mmbp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_consume
</UL>

<P><STRONG><a name="[13b]"></a>epb_init_request_pack_size</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, epb_mmbp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_length_delimited_pack_size
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_data_produce
</UL>

<P><STRONG><a name="[13c]"></a>epb_pack_init_request</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, epb_mmbp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_base_request
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_message
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_bytes
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_packed_size
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_init
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_data_produce
</UL>

<P><STRONG><a name="[13d]"></a>epb_unpack_init_response</STRONG> (Thumb, 410 bytes, Stack size 0 bytes, epb_mmbp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_base_response
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_message
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_string
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_enum
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_int32
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_uint32
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_has_tag
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_init
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_consume
</UL>

<P><STRONG><a name="[13e]"></a>epb_unpack_init_response_free</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, epb_mmbp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_consume
</UL>

<P><STRONG><a name="[13f]"></a>epb_send_data_request_pack_size</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, epb_mmbp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_length_delimited_pack_size
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_varint32_pack_size
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_data_produce
</UL>

<P><STRONG><a name="[140]"></a>epb_pack_send_data_request</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, epb_mmbp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_base_request
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_message
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_bytes
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_enum
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_packed_size
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_init
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_data_produce
</UL>

<P><STRONG><a name="[141]"></a>epb_unpack_send_data_response</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, epb_mmbp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_base_response
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_message
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_bytes
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_has_tag
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_init
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_consume
</UL>

<P><STRONG><a name="[142]"></a>epb_unpack_send_data_response_free</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, epb_mmbp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_consume
</UL>

<P><STRONG><a name="[143]"></a>epb_unpack_recv_data_push</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, epb_mmbp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_base_push
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_message
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_bytes
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_enum
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_has_tag
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_init
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_consume
</UL>

<P><STRONG><a name="[144]"></a>epb_unpack_recv_data_push_free</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, epb_mmbp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_consume
</UL>

<P><STRONG><a name="[145]"></a>epb_unpack_switch_view_push</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, epb_mmbp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_base_push
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_message
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_enum
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_has_tag
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_init
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_consume
</UL>

<P><STRONG><a name="[146]"></a>epb_unpack_switch_view_push_free</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, epb_mmbp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_consume
</UL>

<P><STRONG><a name="[147]"></a>epb_unpack_switch_backgroud_push</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, epb_mmbp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_base_push
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_message
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_enum
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_has_tag
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_init
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_consume
</UL>

<P><STRONG><a name="[148]"></a>epb_unpack_switch_backgroud_push_free</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, epb_mmbp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_consume
</UL>

<P><STRONG><a name="[149]"></a>_sqrt</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mpbledemo2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt (via BLX)
</UL>

<P><STRONG><a name="[14b]"></a>_sqrtf</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, mpbledemo2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt (via BLX)
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[14e]"></a>fmal</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, mpbledemo2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fma (via BLX)
</UL>

<P><STRONG><a name="[150]"></a>lrintl</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mpbledemo2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lrint (via BLX)
</UL>

<P><STRONG><a name="[152]"></a>llrintl</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mpbledemo2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llrint (via BLX)
</UL>

<P><STRONG><a name="[154]"></a>lroundl</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mpbledemo2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lround (via BLX)
</UL>

<P><STRONG><a name="[156]"></a>llroundl</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mpbledemo2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llround (via BLX)
</UL>

<P><STRONG><a name="[158]"></a>nanl</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mpbledemo2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nan (via BLX)
</UL>

<P><STRONG><a name="[15a]"></a>remquol</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mpbledemo2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remquo (via BLX)
</UL>

<P><STRONG><a name="[15e]"></a>mac_convert</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, mpbledemo2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_data_produce
</UL>

<P><STRONG><a name="[107]"></a>wechat_register_Cb</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mpbledemo2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_init
</UL>

<P><STRONG><a name="[15f]"></a>device_send_test</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, mpbledemo2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_data_produce
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_consume
</UL>

<P><STRONG><a name="[10d]"></a>wechat_process</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, mpbledemo2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_data_produce
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_consume
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_ntf_cfg_ind_handler
</UL>

<P><STRONG><a name="[10f]"></a>wechat_consume</STRONG> (Thumb, 426 bytes, Stack size 0 bytes, mpbledemo2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_send_test
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_switch_backgroud_push_free
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_switch_backgroud_push
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_switch_view_push_free
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_switch_view_push
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_recv_data_push_free
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_recv_data_push
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_send_data_response_free
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_send_data_response
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_init_response_free
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_init_response
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_auth_response_free
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_unpack_auth_response
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_process
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohs
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_write_req_handler
</UL>

<P><STRONG><a name="[161]"></a>wechat_clear</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, mpbledemo2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_Init
</UL>

<P><STRONG><a name="[160]"></a>wechat_send_pack</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, mpbledemo2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_data_produce
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_send_data
</UL>

<P><STRONG><a name="[10b]"></a>wechat_set_indicate_state</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mpbledemo2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_ntf_cfg_ind_handler
</UL>

<P><STRONG><a name="[10c]"></a>wechat_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mpbledemo2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_ntf_cfg_ind_handler
</UL>

<P><STRONG><a name="[163]"></a>checkCPUendian</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wechat_util.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;t_ntohl
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;t_htonl
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohs
</UL>

<P><STRONG><a name="[162]"></a>t_htonl</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, wechat_util.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCPUendian
</UL>

<P><STRONG><a name="[164]"></a>t_ntohl</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, wechat_util.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCPUendian
</UL>

<P><STRONG><a name="[15d]"></a>htons</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, wechat_util.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCPUendian
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_data_produce
</UL>

<P><STRONG><a name="[10e]"></a>ntohs</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, wechat_util.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCPUendian
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_consume
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wechat_write_req_handler
</UL>

<P><STRONG><a name="[185]"></a>__ARM_scalbn</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, dscalb.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frexp (via BLX)
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remquo (via BLX)
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fma (via BLX)
</UL>

<P><STRONG><a name="[14c]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sqrtf
</UL>

<P><STRONG><a name="[14d]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, d2f.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sqrtf
</UL>

<P><STRONG><a name="[166]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[168]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_sfrom_d_r
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix_r
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fma (via BLX)
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[167]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_sfrom_d_r
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix_r
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fma (via BLX)
</UL>

<P><STRONG><a name="[165]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix_r
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[169]"></a>_float_epilogue</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, fepilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz (via BLX)
</UL>

<P><STRONG><a name="[16c]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_sfrom_d_r
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[16b]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz (via BLX)
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2d
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmake
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[16d]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llround (via BLX)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lround (via BLX)
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remquo (via BLX)
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fma (via Veneer)
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>

<P><STRONG><a name="[16f]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llround (via BLX)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lround (via BLX)
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fma (via BLX)
</UL>

<P><STRONG><a name="[170]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llround (via BLX)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lround (via BLX)
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remquo (via BLX)
</UL>

<P><STRONG><a name="[171]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 0 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fma (via Veneer)
</UL>

<P><STRONG><a name="[172]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 0 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remquo (via BLX)
</UL>

<P><STRONG><a name="[173]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, dsqrt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt (via BLX)
</UL>

<P><STRONG><a name="[174]"></a>_drnd</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, drnd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llround (via BLX)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lround (via BLX)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llrint (via BLX)
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lrint (via BLX)
</UL>

<P><STRONG><a name="[175]"></a>_drem</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, drem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remquo (via Veneer)
</UL>

<P><STRONG><a name="[176]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lrint (via BLX)
</UL>

<P><STRONG><a name="[177]"></a>__aeabi_l2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, dfltl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llrint (via BLX)
</UL>

<P><STRONG><a name="[178]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, dfixi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remquo (via BLX)
</UL>

<P><STRONG><a name="[179]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fma (via BLX)
</UL>

<P><STRONG><a name="[17a]"></a>_dfix_r</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, dfixir.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lround (via Veneer)
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lrint (via BLX)
</UL>

<P><STRONG><a name="[17b]"></a>_ll_sfrom_d_r</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, dfixlr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llround (via Veneer)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llrint (via BLX)
</UL>

<P><STRONG><a name="[17c]"></a>_dmake</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, dmake.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fma (via BLX)
</UL>

<P><STRONG><a name="[183]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llrint (via BLX)
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remquo (via BLX)
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lrint (via BLX)
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fma (via BLX)
</UL>

<P><STRONG><a name="[187]"></a>__aeabi_cdcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llround (via BLX)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lround (via BLX)
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remquo (via BLX)
</UL>

<P><STRONG><a name="[180]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llround (via BLX)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lround (via BLX)
</UL>

<P><STRONG><a name="[16e]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[17d]"></a>__0vsprintf</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, printfa.o(i.__0vsprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[bd]"></a>vsprintf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfa.o(i.__0vsprintf))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>

<P><STRONG><a name="[186]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llround (via BLX)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lround (via BLX)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llrint (via Veneer)
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt (via Veneer)
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remquo (via Veneer)
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lrint (via Veneer)
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fma (via BLX)
</UL>

<P><STRONG><a name="[14f]"></a>fma</STRONG> (ARM, 2028 bytes, Stack size 0 bytes, fma.o(i.fma), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via BLX)
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr (via BLX)
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frexp
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmake (via BLX)
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub (via BLX)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul (via Veneer)
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz (via BLX)
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq (via BLX)
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd (via Veneer)
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmal (via BLX)
</UL>

<P><STRONG><a name="[184]"></a>frexp</STRONG> (ARM, 108 bytes, Stack size 0 bytes, frexp.o(i.frexp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fma
</UL>

<P><STRONG><a name="[153]"></a>llrint</STRONG> (ARM, 112 bytes, Stack size 0 bytes, llrint.o(i.llrint), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via Veneer)
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_sfrom_d_r (via BLX)
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2d (via BLX)
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd (via BLX)
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llrintl (via BLX)
</UL>

<P><STRONG><a name="[157]"></a>llround</STRONG> (ARM, 268 bytes, Stack size 0 bytes, llround.o(i.llround), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via BLX)
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_sfrom_d_r (via Veneer)
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple (via BLX)
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd (via BLX)
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub (via BLX)
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub (via BLX)
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd (via BLX)
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llroundl (via BLX)
</UL>

<P><STRONG><a name="[151]"></a>lrint</STRONG> (ARM, 88 bytes, Stack size 0 bytes, lrint.o(i.lrint), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via Veneer)
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd (via BLX)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix_r (via BLX)
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d (via BLX)
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lrintl (via BLX)
</UL>

<P><STRONG><a name="[155]"></a>lround</STRONG> (ARM, 268 bytes, Stack size 0 bytes, lround.o(i.lround), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via BLX)
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple (via BLX)
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd (via BLX)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix_r (via Veneer)
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub (via BLX)
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub (via BLX)
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd (via BLX)
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lroundl (via BLX)
</UL>

<P><STRONG><a name="[159]"></a>nan</STRONG> (ARM, 12 bytes, Stack size 0 bytes, nan.o(i.nan), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nanl (via BLX)
</UL>

<P><STRONG><a name="[15b]"></a>remquo</STRONG> (ARM, 404 bytes, Stack size 0 bytes, remquo.o(i.remquo), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via Veneer)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem (via Veneer)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv (via BLX)
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz (via BLX)
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple (via BLX)
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq (via BLX)
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub (via BLX)
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd (via BLX)
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remquol (via BLX)
</UL>

<P><STRONG><a name="[14a]"></a>sqrt</STRONG> (ARM, 96 bytes, Stack size 0 bytes, sqrt.o(i.sqrt), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via Veneer)
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sqrtf (via BLX)
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sqrt (via BLX)
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1e]"></a>uart_rx_handler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[82]"></a>Stack_Integrity_Check</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[1]"></a>Undefined</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undefined_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[2]"></a>SoftwareInterrupt</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInterrupt_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[3]"></a>PrefetchAbort</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrefetchAbort_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[4]"></a>DataAbort</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataAbort_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[6]"></a>IRQ_Handler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[5]"></a>sys_reserved</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reserved_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[7]"></a>FIQ_Handler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_FIQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[24]"></a>rf_reset</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[22]"></a>rf_txpwr_dbm_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[23]"></a>rf_sleep</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[26]"></a>rf_rssi_convert</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[20]"></a>rf_rpl_reg_rd</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[21]"></a>rf_rpl_reg_wr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[25]"></a>rf_force_agc_enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[cd]"></a>flash_unlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writeword
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_readword
</UL>

<P><STRONG><a name="[cc]"></a>flash_writeKey</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writeword
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_readword
</UL>

<P><STRONG><a name="[d0]"></a>flash_clearKey</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writeword
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_readword
</UL>

<P><STRONG><a name="[ce]"></a>flash_start</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writeword
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_readword
</UL>

<P><STRONG><a name="[cf]"></a>flash_status</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writeword
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_readword
</UL>

<P><STRONG><a name="[29]"></a>bass_init</STRONG> (Thumb, 342 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_set_permission
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[2a]"></a>bass_destroy</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[2b]"></a>bass_create</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bass.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[2c]"></a>bass_cleanup</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bass.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[dc]"></a>bass_notify_batt_lvl</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_handle
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
</UL>

<P><STRONG><a name="[2d]"></a>bass_enable_req_handler</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_conhdl
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[2e]"></a>bass_batt_level_upd_req_handler</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[2f]"></a>gattc_att_info_req_ind_handler</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_idx
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[30]"></a>gattc_write_req_ind_handler</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_idx
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[31]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_pack_char_pres_fmt
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_idx
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[32]"></a>gattc_cmp_evt_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[33]"></a>diss_init</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_compute_cfg_flag
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_init
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[34]"></a>diss_destroy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[35]"></a>diss_create</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, diss.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[36]"></a>diss_cleanup</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, diss.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[37]"></a>diss_set_value_req_handler</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, diss_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_check_val_len
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_to_handle
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_extract
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss_task.o(.constdata)
</UL>
<P><STRONG><a name="[38]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, diss_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_handle_to_value
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss_task.o(.constdata)
</UL>
<P><STRONG><a name="[39]"></a>diss_value_cfm_handler</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, diss_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_to_handle
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss_task.o(.constdata)
</UL>
<P><STRONG><a name="[3a]"></a>wechat_init</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, wechat.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_set_permission
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wechat.o(.constdata)
</UL>
<P><STRONG><a name="[3b]"></a>wechat_destroy</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wechat.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wechat.o(.constdata)
</UL>
<P><STRONG><a name="[3c]"></a>wechat_create</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wechat.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> wechat.o(.constdata)
</UL>
<P><STRONG><a name="[3d]"></a>wechat_cleanup</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wechat.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> wechat.o(.constdata)
</UL>
<P><STRONG><a name="[3e]"></a>wechat_ind_upd_req_handler</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, wechat_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_indicate_lvl
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wechat_task.o(.constdata)
</UL>
<P><STRONG><a name="[3f]"></a>gattc_att_info_req_ind_handler</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, wechat_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_get_att_idx
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wechat_task.o(.constdata)
</UL>
<P><STRONG><a name="[40]"></a>gattc_write_req_ind_handler</STRONG> (Thumb, 196 bytes, Stack size 0 bytes, wechat_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_get_att_idx
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wechat_task.o(.constdata)
</UL>
<P><STRONG><a name="[41]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, wechat_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_get_att_idx
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wechat_task.o(.constdata)
</UL>
<P><STRONG><a name="[42]"></a>gattc_cmp_evt_handler</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, wechat_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wechat_task.o(.constdata)
</UL>
<P><STRONG><a name="[f1]"></a>prf_itf_get</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_prf_itf_get
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_prf_itf_get
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_prf_itf_get
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_create
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_cleanup
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_add_profile
</UL>

<P><STRONG><a name="[47]"></a>bass_batt_level_ntf_cfg_ind_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_batt.o(.constdata)
</UL>
<P><STRONG><a name="[48]"></a>batt_level_upd_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_batt.o(.constdata)
</UL>
<P><STRONG><a name="[49]"></a>bass_enable_rsp_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_batt.o(.constdata)
</UL>
<P><STRONG><a name="[46]"></a>app_batt_msg_dflt_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_batt.o(.constdata)
</UL>
<P><STRONG><a name="[4a]"></a>diss_value_req_ind_handler</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, app_dis.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_dis.o(.constdata)
</UL>
<P><STRONG><a name="[106]"></a>appm_get_handler</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_msg_handler
</UL>

<P><STRONG><a name="[4c]"></a>gapm_device_ready_ind_handler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[4d]"></a>gapm_cmp_evt_handler</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_add_svc
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[4e]"></a>gapc_get_dev_info_req_ind_handler</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_get_dev_name
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[4f]"></a>gapc_set_dev_info_req_ind_handler</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[50]"></a>gapc_connection_req_ind_handler</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_enable_prf
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[51]"></a>gapc_cmp_evt_handler</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[52]"></a>gapc_disconnect_ind_handler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[53]"></a>gapm_profile_added_ind_handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[59]"></a>app_period_timer_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[4b]"></a>appm_msg_handler</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_get_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[58]"></a>gapc_update_conn_param_req_ind_handler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_param
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[54]"></a>gapc_le_pkt_size_ind_handler</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[55]"></a>gapc_param_updated_ind_handler</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[56]"></a>gattc_mtu_changed_ind_handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[57]"></a>gapc_param_update_req_ind_handler</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[27]"></a>app_wechat_recvCb</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, app_wechat.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_wechat.o(.text)
</UL>
<P><STRONG><a name="[5b]"></a>app_wechat_ntf_cfg_ind_handler</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, app_wechat.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_set_indicate_state
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_process
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_wechat.o(.constdata)
</UL>
<P><STRONG><a name="[5a]"></a>app_wechat_msg_dflt_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_wechat.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_wechat.o(.constdata)
</UL>
<P><STRONG><a name="[5c]"></a>app_wechat_write_req_handler</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, app_wechat.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_consume
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohs
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_wechat.o(.constdata)
</UL>
<P><STRONG><a name="[5d]"></a>app_wechat_gattc_cmp_evt_handler</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_wechat.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_send_indicate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_wechat.o(.constdata)
</UL>
<P><STRONG><a name="[111]"></a>crc_table</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, crc32.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32
</UL>

<P><STRONG><a name="[113]"></a>epb_get_varint32_bits</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, epb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_bytes
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_uint32
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_tag_value_offset
</UL>

<P><STRONG><a name="[112]"></a>epb_get_tag_value_offset</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, epb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_varint32_bits
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_fixed32
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_bytes
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_get_uint32
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_has_tag
</UL>

<P><STRONG><a name="[122]"></a>epb_pack_tag</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, epb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_fixed32
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_bytes
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_uint32
</UL>

<P><STRONG><a name="[120]"></a>epb_pack_varint32_bits</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, epb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_bytes
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_set_uint32
</UL>

<P><STRONG><a name="[15c]"></a>wechat_data_produce</STRONG> (Thumb, 466 bytes, Stack size 0 bytes, mpbledemo2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_convert
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_send_data_request
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_send_data_request_pack_size
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_init_request
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_init_request_pack_size
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_pack_auth_request
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;epb_auth_request_pack_size
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_send_pack
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_send_test
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wechat_process
</UL>

<P><STRONG><a name="[17f]"></a>_fp_digits</STRONG> (Thumb, 316 bytes, Stack size 0 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[17e]"></a>_printf_core</STRONG> (Thumb, 1764 bytes, Stack size 0 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
</UL>

<P><STRONG><a name="[182]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[181]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[28]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0vsprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
